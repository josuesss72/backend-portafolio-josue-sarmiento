"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/plaiceholder";
exports.ids = ["vendor-chunks/plaiceholder"];
exports.modules = {

/***/ "(rsc)/./node_modules/plaiceholder/dist/plaiceholder.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/plaiceholder/dist/plaiceholder.esm.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPlaiceholder: () => (/* binding */ getPlaiceholder)\n/* harmony export */ });\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sharp */ \"sharp\");\n\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"a\"],\n    _excluded2 = [\"autoOrient\", \"size\", \"format\", \"brightness\", \"saturation\", \"removeAlpha\"],\n    _excluded3 = [\"width\", \"height\"];\n/* Utils\n   =========================================== */\n\nvar arrayChunk = function arrayChunk(arr, size) {\n  return arr.length > size ? [arr.slice(0, size)].concat(arrayChunk(arr.slice(size), size)) : [arr];\n};\n\nvar toRGBAString = function toRGBAString(_ref) {\n  var r = _ref.r,\n      g = _ref.g,\n      b = _ref.b,\n      a = _ref.a;\n  if (typeof a === \"undefined\") return \"rgb(\" + [r, g, b].join(\",\") + \")\";\n  return \"rgba(\" + [r, g, b, a].join(\",\") + \")\";\n};\n\nvar getPixels = function getPixels(_ref2) {\n  var _ref3;\n\n  var data = _ref2.data,\n      info = _ref2.info;\n  var channels = info.channels,\n      width = info.width;\n\n  var rawBuffer = (_ref3 = []).concat.apply(_ref3, data);\n\n  var allPixels = arrayChunk(rawBuffer, channels);\n  var rows = arrayChunk(allPixels, width);\n  var pixels = rows.map(function (row) {\n    return row.map(function (pixel) {\n      var r = pixel[0],\n          g = pixel[1],\n          b = pixel[2],\n          a = pixel[3];\n      return _extends({\n        r: r,\n        g: g,\n        b: b\n      }, typeof a === \"undefined\" ? {} : {\n        a: Math.round(a / 255 * 1000) / 1000\n      });\n    });\n  });\n  return pixels;\n};\n\nvar getCSS = function getCSS(_ref4) {\n  var pixels = _ref4.pixels,\n      info = _ref4.info;\n  var linearGradients = pixels.map(function (row) {\n    var rowPixels = row.map(function (pixel) {\n      return toRGBAString(pixel);\n    });\n    var gradient = rowPixels.map(function (pixel, i) {\n      var start = i === 0 ? \"\" : \" \" + i / rowPixels.length * 100 + \"%\";\n      var end = i === rowPixels.length ? \"\" : \" \" + (i + 1) / rowPixels.length * 100 + \"%\";\n      return \"\" + pixel + start + end;\n    }).join(\",\");\n    return \"linear-gradient(90deg, \" + gradient + \")\";\n  });\n\n  if (linearGradients.length !== info.height) {\n    console.error(\"Woops! Something went wrong here and caused the color height to differ from the source height.\");\n  }\n\n  var backgroundPosition = linearGradients.map(function (_, i) {\n    return i === 0 ? \"0 0 \" : \"0 \" + i / (linearGradients.length - 1) * 100 + \"%\";\n  }).join(\",\");\n  var backgroundSize = \"100% \" + 100 / linearGradients.length + \"%\";\n  return {\n    backgroundImage: linearGradients.join(\",\"),\n    backgroundPosition: backgroundPosition,\n    backgroundSize: backgroundSize,\n    backgroundRepeat: \"no-repeat\"\n  };\n};\n\nvar getSVG = function getSVG(_ref5) {\n  var _ref7;\n\n  var pixels = _ref5.pixels,\n      info = _ref5.info;\n  var chunkRects = pixels.map(function (row, y) {\n    return row.map(function (_ref6, x) {\n      var a = _ref6.a,\n          rgb = _objectWithoutPropertiesLoose(_ref6, _excluded);\n\n      var colorProps = typeof a !== \"undefined\" ? {\n        fill: toRGBAString(rgb),\n        \"fill-opacity\": a\n      } : {\n        fill: toRGBAString(rgb),\n        \"fill-opacity\": 1\n      };\n      return [\"rect\", _extends({}, colorProps, {\n        width: 1,\n        height: 1,\n        x: x,\n        y: y\n      })];\n    });\n  });\n\n  if (chunkRects.length !== info.height) {\n    console.error(\"Woops! Something went wrong here and caused the color height to differ from the source height.\");\n  }\n\n  var rects = (_ref7 = []).concat.apply(_ref7, chunkRects);\n\n  return [\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"100%\",\n    height: \"100%\",\n    shapeRendering: \"crispEdges\",\n    preserveAspectRatio: \"none\",\n    viewBox: \"0 0 \" + info.width + \" \" + info.height,\n    style: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transformOrigin: \"top left\",\n      transform: \"translate(-50%, -50%)\",\n      right: 0,\n      bottom: 0\n    }\n  }, rects];\n};\n\nvar getPlaiceholder = function getPlaiceholder(src, _temp) {\n  var _ref8 = _temp === void 0 ? {} : _temp,\n      _ref8$autoOrient = _ref8.autoOrient,\n      autoOrient = _ref8$autoOrient === void 0 ? false : _ref8$autoOrient,\n      _ref8$size = _ref8.size,\n      size = _ref8$size === void 0 ? 4 : _ref8$size,\n      _ref8$format = _ref8.format,\n      format = _ref8$format === void 0 ? [\"png\"] : _ref8$format,\n      _ref8$brightness = _ref8.brightness,\n      brightness = _ref8$brightness === void 0 ? 1 : _ref8$brightness,\n      _ref8$saturation = _ref8.saturation,\n      saturation = _ref8$saturation === void 0 ? 1.2 : _ref8$saturation,\n      _ref8$removeAlpha = _ref8.removeAlpha,\n      removeAlpha = _ref8$removeAlpha === void 0 ? false : _ref8$removeAlpha,\n      options = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n\n  try {\n    /* Optimize\n      ---------------------------------- */\n    return Promise.resolve(sharp__WEBPACK_IMPORTED_MODULE_0__(src).metadata().then(function (_ref9) {\n      var width = _ref9.width,\n          height = _ref9.height,\n          metadata = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n\n      if (!width || !height) {\n        throw Error(\"Could not get required image metadata\");\n      }\n\n      return _extends({\n        width: width,\n        height: height\n      }, metadata);\n    })).then(function (metadata) {\n      var _sharp$resize;\n\n      var sizeMin = 4;\n      var sizeMax = 64;\n      var isSizeValid = sizeMin <= size && size <= sizeMax;\n      !isSizeValid && console.error([\"Please enter a `size` value between\", sizeMin, \"and\", sizeMax].join(\" \")); // initial optimization\n\n      var pipelineStage1 = (_sharp$resize = sharp__WEBPACK_IMPORTED_MODULE_0__(src).resize(size, size, {\n        fit: \"inside\"\n      })).toFormat.apply(_sharp$resize, format).modulate(_extends({\n        brightness: brightness,\n        saturation: saturation\n      }, options != null && options.hue ? {\n        hue: options == null ? void 0 : options.hue\n      } : {}, options != null && options.lightness ? {\n        lightness: options == null ? void 0 : options.lightness\n      } : {})); // alpha\n\n\n      var pipelineStage2 = removeAlpha === false ? pipelineStage1 : pipelineStage1.removeAlpha(); // autoOrientation\n\n      var pipelineStage3 = autoOrient === false ? pipelineStage2 : pipelineStage2.rotate();\n      var pipeline = pipelineStage3;\n      /* Return\n        ---------------------------------- */\n\n      return Promise.resolve(pipeline.clone().stats().then(function (_ref10) {\n        var _ref10$dominant = _ref10.dominant,\n            r = _ref10$dominant.r,\n            g = _ref10$dominant.g,\n            b = _ref10$dominant.b;\n        return {\n          r: r,\n          g: g,\n          b: b,\n          hex: \"#\" + [r, g, b].map(function (x) {\n            return x.toString(16).padStart(2, \"0\");\n          }).join(\"\")\n        };\n      })).then(function (color) {\n        return Promise.resolve(pipeline.clone().normalise().toBuffer({\n          resolveWithObject: true\n        }).then(function (_ref11) {\n          var data = _ref11.data,\n              info = _ref11.info;\n          return \"data:image/\" + info.format + \";base64,\" + data.toString(\"base64\");\n        })[\"catch\"](function (err) {\n          console.error(\"base64 generation failed\", err);\n          throw err;\n        })).then(function (base64) {\n          return Promise.resolve(pipeline.clone().raw().toBuffer({\n            resolveWithObject: true\n          }).then(function (_ref12) {\n            var data = _ref12.data,\n                info = _ref12.info;\n            var pixels = getPixels({\n              data: data,\n              info: info\n            });\n            var css = getCSS({\n              pixels: pixels,\n              info: info\n            });\n            var svg = getSVG({\n              pixels: pixels,\n              info: info\n            });\n            return {\n              pixels: pixels,\n              css: css,\n              svg: svg\n            };\n          })[\"catch\"](function (err) {\n            console.error(\"pixel generation failed\", err);\n            throw err;\n          })).then(function (_ref13) {\n            var pixels = _ref13.pixels,\n                css = _ref13.css,\n                svg = _ref13.svg;\n            return {\n              color: color,\n              css: css,\n              base64: base64,\n              metadata: metadata,\n              pixels: pixels,\n              svg: svg\n            };\n          });\n        });\n      });\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\n\n//# sourceMappingURL=plaiceholder.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/plaiceholder/dist/plaiceholder.esm.js\n");

/***/ })

};
;